#!/usr/bin/env ruby

require 'thor'
require 'chariot'

class Aliases < Thor
  namespace 'alias'

  desc 'add NAME LOCATION', 'Save an alias for a location'
  def add(name, location)
    Chariot.add_location(name, location)
  end

  desc 'list', 'Show all saved aliases'
  def list
    aliases = Chariot.locations
    aliases.each do |name, value|
      puts "#{name}: #{value}"
    end
  end

  desc 'delete NAME', 'Deletes the alias with the given name'
  option :all, aliases: '-a', type: :boolean, desc: 'Delete all aliases - WARNING PERMANENT'
  def delete(name)
    if options[:a] == true
      Chariot.delete_locations
    else
      Chariot.clear_location(name)
    end
  end
end

class TransitApp < Thor
  namespace 'chariot'

  desc 'route', 'Get a bus route between two locations'
  option :origin, aliases: '-o', desc: 'Specify the destination location'
  option :destination, aliases: '-d', desc: 'Specify the departure location'
  option :time, aliases: '-t', desc: 'Specify departure time'
  option :alternatives, aliases: '-a', type: :boolean, desc: 'Allow alternate routes. Without this only the best match is returned'
  def route
    from = options[:origin]
    to = options[:destination]
    time = options[:time]
    alts = options[:alternatives] || false
    Chariot.get_routes(from, to, time, alts)
  end

  register(Aliases, 'alias', 'alias <command>', "Manage the application's aliases")
end

TransitApp.start
